@article{netwok2020,
  title={At-scale impact of the {Net Wok}: A culinarically holistic investigation of distributed dumplings},
  author={Astley, Rick and Morris, Linda},
  journal={Armenian Journal of Proceedings},
  volume={61},
  pages={192--219},
  year=2020,
  publisher={Automatic Publishing Inc.}
}
@manual{pq,
  title        = "PostgreSQL 17.0 Documentation",
  author       = "",
  organization = "The PostgreSQL Global Development Group",
  address      = "https://www.postgresql.org/docs/17",
  edition      = "17",
  month        = "September",
  year         = "2024",
}
@manual{pqgh,
  title = "PostgreSQL Database Management System",
  author = "Momjian, Eisentraut, Lane",
  organization = "PostgreSQL Global Development Group",
  address = "https://github.com/postgres/postgres",
  edition = "17",
  month = "September",
  year = "2024",
}

@book{calendar,
author = {Dershowitz, Nachum and Reingold, Edward M.},
title = {Calendrical Calculations},
year = {2007},
isbn = {052188540X},
edition = {3},
abstract = {A valuable resource for working programmers, as well as a fount of useful algorithmic tools for computer scientists, this new edition of the popular calendars book expands the treatment of the previous edition to new calendar variants: generic cyclical calendars and astronomical lunar calendars as well as the Korean, Vietnamese, Aztec, and Tibetan calendars. The authors frame the calendars of the world in a completely algorithmic form, allowing easy conversion among these calendars and the determination of secular and religious holidays. LISP and Java code for all the algorithms are available on the Web.}
}

@INPROCEEDINGS{sql-errors,
  author={Nagy, Csaba and Cleve, Anthony},
  booktitle={2015 IEEE International Conference on Software Maintenance and Evolution (ICSME)}, 
  title={Mining Stack Overflow for discovering error patterns in SQL queries}, 
  year={2015},
  volume={},
  number={},
  pages={516-520},
  keywords={Java;Cloning;XML;Encoding;Programming;Syntactics;Databases;SQL;Mining Stack Overflow;Error Patterns;Code Clones;Recommendation Systems},
  doi={10.1109/ICSM.2015.7332505}}

@inproceedings{sql-widely-used,
  title={An appraisal to optimize SQL queries},
  author={Myalapalli, Vamsi Krishna and Shiva, Muddu Butchi},
  booktitle={2015 International Conference on Pervasive Computing (ICPC)},
  pages={1--6},
  year={2015},
  organization={IEEE}
}

@inproceedings{sqldialect,
author = {Zmigrod, Ran and Alamir, Salwa and Liu, Xiaomo},
title = {Translating between SQL Dialects for Cloud Migration},
year = {2024},
isbn = {9798400705014},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3639477.3639727},
doi = {10.1145/3639477.3639727},
abstract = {Migrations of systems from on-site premises to the cloud has been a fundamental endeavor by many industrial institutions. A crucial component of such cloud migrations is the transition of databases to be hosted online. In this work, we consider the difficulties of this migration for SQL databases. While SQL is one of the prominent methods for storing database procedures, there are a plethora of different SQL dialects (e.g., MySQL, Postgres, etc.) which can complicate migrations when the on-premise SQL dialect differs to the dialect hosted on the cloud. Tools exist by common cloud provides such as AWS and Azure to aid in translating between dialects in order to mitigate the majority of the difficulties. However, these tools do not successfully translate 100\% of the code. Consequently, software engineers must manually convert the remainder of the untranslated database. For large organizations, this task quickly becomes intractable and so more innovative solutions are required. We consider this challenge a novel yet vital industrial research problem for any large corporation that is considering cloud migrations. Furthermore, we introduce potential avenues of research to tackle this challenge that have yielded promising preliminary results.},
booktitle = {Proceedings of the 46th International Conference on Software Engineering: Software Engineering in Practice},
pages = {189–191},
numpages = {3},
keywords = {cloud migration, SQL, code translation},
location = {Lisbon, Portugal},
series = {ICSE-SEIP '24}
}

@book{psql,
  title={The Design and Implementation of the Postgres Query Optimizer: Research Project},
  author={Fong, Z. and University of California, Berkeley. Department of Electrical Engineering and Computer Sciences},
  url={https://books.google.de/books?id=dx2AGwAACAAJ},
  year={1986}
}

@book{chai,
  title={A Cup of Chai and Other Stories},
  author={Varma, M.},
  isbn={9788188234318},
  lccn={2007393401},
  url={https://books.google.de/books?id=JQ5oAAAAMAAJ},
  year={2007},
  publisher={Aurum Press}
}

@article{paper1,
author = {Wassermann, Gary and Gould, Carl and Su, Zhendong and Devanbu, Premkumar},
title = {Static checking of dynamically generated queries in database applications},
year = {2007},
issue_date = {September 2007},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {16},
number = {4},
issn = {1049-331X},
url = {https://doi.org/10.1145/1276933.1276935},
doi = {10.1145/1276933.1276935},
abstract = {Many data-intensive applications dynamically construct queries in response to client requests and execute them. Java servlets, for example, can create strings that represent SQL queries and then send the queries, using JDBC, to a database server for execution. The servlet programmer enjoys static checking via Java's strong type system. However, the Java type system does little to check for possible errors in the dynamically generated SQL query strings. Thus, a type error in a generated selection query (e.g., comparing a string attribute with an integer) can result in an SQL runtime exception. Currently, such defects must be rooted out through careful testing, or (worse) might be found by customers at runtime. In this article, we present a sound, static program analysis technique to verify that dynamically generated query strings do not contain type errors. We describe our analysis technique and provide soundness results for our static analysis algorithm. We also describe the details of a prototype tool based on the algorithm and present several illustrative defects found in senior software-engineering student-team projects, online tutorial examples, and a real-world purchase order system written by one of the authors.},
journal = {ACM Trans. Softw. Eng. Methodol.},
month = sep,
pages = {14–es},
numpages = {27},
keywords = {JDBC, Static checking, context-free language reachability, database queries}
}

@inproceedings{ormpaper,
  title={Object/relational mapping 2008: hibernate and the entity data model (edm)},
  author={O'Neil, Elizabeth J},
  booktitle={Proceedings of the 2008 ACM SIGMOD international conference on Management of data},
  pages={1351--1356},
  year={2008}
}

@inproceedings{sqlinject,
  title={SQLrand: Preventing SQL injection attacks},
  author={Boyd, Stephen W and Keromytis, Angelos D},
  booktitle={Applied Cryptography and Network Security: Second International Conference, ACNS 2004, Yellow Mountain, China, June 8-11, 2004. Proceedings 2},
  pages={292--302},
  year={2004},
  organization={Springer}
}

@inproceedings{paper2,
  author       = {Michael Hanus and
                  Julia Krone},
  editor       = {Sibylle Schwarz and
                  Janis Voigtl{\"{a}}nder},
  title        = {A Typeful Integration of {SQL} into Curry},
  booktitle    = {Proceedings 29th and 30th Workshops on (Constraint) Logic Programming
                  and 24th International Workshop on Functional and (Constraint) Logic
                  Programming, {WLP} 2015 / {WLP} 2016 / {WFLP} 2016, Dresden and Leipzig,
                  Germany, 22nd September 2015 and 12-14th September 2016},
  series       = {{EPTCS}},
  volume       = {234},
  pages        = {104--119},
  year         = {2017},
  url          = {https://doi.org/10.4204/EPTCS.234.8},
  doi          = {10.4204/EPTCS.234.8},
  timestamp    = {Sun, 06 Oct 2024 21:22:38 +0200},
  biburl       = {https://dblp.org/rec/journals/corr/HanusK17.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@article{paper3,
  title={Type Checking SQL for Secure Database Access},
  author={Caldwell, James and Roan, Ryan},
  publisher={Citeseer}
}

@article{paper4,
  title={Static type safety guarantees for the operators of a relational database querying system},
  author={Lavanchy, C{\'e}dric},
  journal={Semester project report},
  year={2008},
  publisher={Citeseer}
}
